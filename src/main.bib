%! Author = Kevin
%! Date = 29.07.2022
https://github.com/tauri-apps/tauri

@misc{GithubTauri,
    author = {\url{https://github.com/tauri-apps}},
    title = {Tauri},
    howpublished = {\url{https://github.com/tauri-apps/tauri}},
    note = {[Accessed 13-Aug-2022},
}

@misc{hyperfine,
    author = {David Peter},
    title = {hyperfine},
    howpublished = {\url{https://github.com/sharkdp/hyperfine}},
    note = {[Accessed 13-Aug-2022},
}

@misc{rustPerformance,
    title={A comparison of performance \& implementation complexity of multithreaded applications in rust, java and c++},
    author={Heyman, Hugo and Brandefelt, Love},
    year={2020}
}

@techreport{bsi,
    title = {Kritische Schwachstelle in log4j veröffentlicht (CVE-2021-44228)},
    institution = {Bundesamt für Sicherheit in der Informationstechnik},
    year = {2021},
    howpublished = {\url{https://www.bsi.bund.de/SharedDocs/Cybersicherheitswarnungen/DE/2021/2021-549032-10F2.pdf?__blob=publicationFile&v=10}},
}

@misc{memoryProfiler,
    maintainer = {fpedregosa},
    title = {Memory Profiler},
    howpublished = {\url{https://pypi.org/project/memory-profiler/}},
    note = {[Accessed 13-Aug-2022},
}
@article{C++Javascript,
    title={Performance Comparison of C++ and JavaScript (Node. js--V8 Engine)},
    author={Stefanoski, Kristijan and Karadimche, Aleksandar and Dimitrievski, Ile},
    journal={Research Gate},
    year={2019}
}

@phdthesis{rustCompileTime,
    title={Polymorphisation: Improving Rust compilation times through intelligent monomorphisation},
    author={Wood, David},
    year={2020},
    school={MS thesis, School of Computing Science, University of Glasgow, Glasgow, Scotland}
}
@misc{githubReleaseV010,
    author = {Cheng Zhao},
    title = {Release v0.1.0: Update node: use node's implementation of set Immediate.},
    howpublished = {\url{https://github.com/electron/electron/releases/tag/v0.1.0}},
    year = {2013},
    month={Jul},
    note = {[Accessed 26-May-2022]},
}

@misc{tauriRelease,
    author = {Lucas Fernandes Nogueira},
    title = {v0.3.0 - Tauri Alpha },
    howpublished = {\url{https://github.com/tauri-apps/tauri/releases/tag/v0.3.0}},
    year = {2019},
    month={Dec},
    note = {[Accessed 13-Aug-2022]},
}

@book{klabnik2019rust,
    title={The Rust Programming Language (Covers Rust 2018)},
    author={Klabnik, S. and Nichols, C.},
    isbn={9781718500457},
    url={https://books.google.de/books?id=qAOhDwAAQBAJ},
    year={2019},
    publisher={No Starch Press}
}


@misc{V8Doc,
    title = {V8 Documentation},
    howpublished = {\url{https://v8.dev/docs}},
    note = {[Accessed 13-Aug-2022]},
}
https://github.com/WebKit/WebKit
@misc{githubWebview,
    author = {WebView},
    title = {WebView},
    howpublished = {\url{https://github.com/webview/webview}},
    note = {[Accessed 16-Aug-2022},
}
@misc{blinkGoogle,
    author = {The Chromium Projects},
    title = {Blink (Rendering Engine)},
    howpublished = {\url{https://www.chromium.org/blink/}},
    note = {[Accessed 13-Aug-2022]},
}
@misc{ElectronDoc,
    author = {\url{https://www.electronjs.org/}},
    title = {Electron Documentation},
    howpublished = {\url{https://www.electronjs.org/docs/latest}},
    note = {[Accessed 13-Aug-2022]},
}

@article{heiseBlink,
    author = {Leo Becker},
    title = {Google-Chrome-Entwickler: Apple hält das Web zurück},
    journal = {heise online},
    year = {2019},
    howpublished = {\url{https://www.heise.de/mac-and-i/meldung/Google-Chrome-Entwickler-Apple-haelt-das-Web-zurueck-4578626.html}},
    note = {[Accessed 13-Aug-2022]},
}

@misc{GithubElectron,
    author = {\url{https://www.electronjs.org/}},
    title = {Electron},
    howpublished = {\url{https://github.com/electron/electron}},
    note = {[Accessed 30-Jul-2022},
}

@misc{sawicki_2015,
    title={Atom Shell is now Electron},
    howpublished={\url{https://www.electronjs.org/blog/electron}},
    journal={ElectronJS.org},
    author={Sawicki, Kevin},
    year={2015},
    month={Apr},
    note = {[Accessed 26-May-2022]},
}

@misc{tauri,
    title={Tauri Blog},
    howpublished={\url{https://tauri.app}},
    note = {[Accessed 30-July-2022]},
}



@InProceedings{pernice:icalepcs2019-wempr006,
    author       = {E.R. Pernice and others},
    title        = {{Application Development in the Face of Evolving Web Technologies at the National Ignition Facility}},
    booktitle    = {Proc. ICALEPCS'19},
    pages        = {1052--1056},
    paper        = {WEMPR006},
    language     = {english},
    keywords     = {framework, experiment, factory, MMI, controls},
    venue        = {New York, NY, USA},
    series       = {International Conference on Accelerator and Large Experimental Physics Control Systems},
    number       = {17},
    publisher    = {JACoW Publishing, Geneva, Switzerland},
    month        = {08},
    year         = {2020},
    issn         = {2226-0358},
    isbn         = {978-3-95450-209-7},
    doi          = {10.18429/JACoW-ICALEPCS2019-WEMPR006},
    url          = {https://jacow.org/icalepcs2019/papers/wempr006.pdf},
    note         = {https://doi.org/10.18429/JACoW-ICALEPCS2019-WEMPR006},
    abstract     = {The past decade has seen great advances in web technology, making the browser the de-facto platform for many user applications. Advances in JavaScript, and innovations such as TypeScript, have enabled developers to build large scale applications for the web without sacrificing code maintainability. However, this rapid growth has also been accompanied by turbulence. AngularJS arrived and saw widespread adoption only to be supplanted by Angular 2+ a few years later; meanwhile other JavaScript-based languages and developer tools have proliferated. At the National Ignition Facility (NIF), the Shot Setup Tool (SST) is a large web-based tool for configuring experiments on the NIF that is being developed to replace legacy Java Swing application. We will present our experience in building SST during this turbulent time, including how we have leveraged TypeScript to greatly enhance code readability and maintainability in a multi-developer team, and our current effort to incrementally migrate from AngularJS to React.},
}

@inproceedings{explorationstudy,
    author = {Scoccia, Gian Luca and Autili, Marco},
    title = {Web Frameworks for Desktop Apps: An Exploratory Study},
    year = {2020},
    isbn = {9781450375801},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/3382494.3422171},
    doi = {10.1145/3382494.3422171},
    abstract = {Background: Novel frameworks for the development of desktop applications with web technologies have become popular. These desktop web app frameworks allow developers to reuse existing code and knowledge of web applications for the creation of cross-platform apps integrated with native APIs. Aims: To date, desktop web app frameworks have not been studied empirically. In this paper, we aim to fill this gap by characterizing the usage of web frameworks and providing evidence on how beneficial are their pros and how impactful are their cons. Method: We conducted an empirical study, collecting and analyzing 453 desktop web apps publicly available on GitHub. We performed qualitative and quantitative analyses to uncover the traits and issues of desktop web apps. Results: We found that desktop web app frameworks enable the development of cross-platform applications even for teams of limited dimensions, taking advantage of the abundant number of available web libraries. However, at the same time, bugs deriving from platform compatibility issues are common. Conclusions: Our study provides concrete evidence on some disadvantages associated with desktop web app frameworks. Future work is required to assess their impact on the required development and maintenance effort, and to investigate other aspects not considered in this first research.},
    booktitle = {Proceedings of the 14th ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM)},
    articleno = {35},
    numpages = {6},
    keywords = {desktop apps, Web technologies, cross-platform},
    location = {Bari, Italy},
    series = {ESEM '20}
}

@Article{Gorbalenya2020,
     author={Gorbalenya, Alexander E.
and Baker, Susan C.
and Baric, Ralph S.
and de Groot, Raoul J.
and Drosten, Christian
and Gulyaeva, Anastasia A.
and Haagmans, Bart L.
and Lauber, Chris
and Leontovich, Andrey M.
and Neuman, Benjamin W.
and Penzar, Dmitry
and Perlman, Stanley
and Poon, Leo L. M.
and Samborskiy, Dmitry V.
and Sidorov, Igor A.
and Sola, Isabel
and Ziebuhr, John
and of Viruses, Coronaviridae Study Group of the International Committee on Taxonomy},
     title={The species Severe acute respiratory syndrome-related coronavirus: classifying 2019-nCoV and naming it SARS-CoV-2},
     journal={Nature Microbiology},
     year={2020},
     month={Apr},
     day={01},
     volume={5},
     number={4},
     pages={536-544},
     abstract={The present outbreak of a coronavirus-associated acute respiratory disease called coronavirus disease 19 (COVID-19) is the third documented spillover of an animal coronavirus to humans in only two decades that has resulted in a major epidemic. The Coronaviridae Study Group (CSG) of the International Committee on Taxonomy of Viruses, which is responsible for developing the classification of viruses and taxon nomenclature of the family Coronaviridae, has assessed the placement of the human pathogen, tentatively named 2019-nCoV, within the Coronaviridae. Based on phylogeny, taxonomy and established practice, the CSG recognizes this virus as forming a sister clade to the prototype human and bat severe acute respiratory syndrome coronaviruses (SARS-CoVs) of the species Severe acute respiratory syndrome-related coronavirus, and designates it as SARS-CoV-2. In order to facilitate communication, the CSG proposes to use the following naming convention for individual isolates: SARS-CoV-2/host/location/isolate/date. While the full spectrum of clinical manifestations associated with SARS-CoV-2 infections in humans remains to be determined, the independent zoonotic transmission of SARS-CoV and SARS-CoV-2 highlights the need for studying viruses at the species level to complement research focused on individual pathogenic viruses of immediate significance. This will improve our understanding of virus--host interactions in an ever-changing environment and enhance our preparedness for future outbreaks.},
     issn={2058-5276},
     doi={10.1038/s41564-020-0695-z},
     url={https://doi.org/10.1038/s41564-020-0695-z}
}

@

@thesis{flutter,
    doi = {10.18419/OPUS-11498},
    url = {http://elib.uni-stuttgart.de/handle/11682/11515},
    author = {Müller, Elias},
    keywords = {004},
    language = {en},
    title = {Web technologies on the desktop: an early look at Flutter},
    publisher = {Universität Stuttgart},
    year = {2021},
    copyright = {info:eu-repo/semantics/openAccess}
}

@book{electron-nwjs,
    author = {Paul B. Jensen},
    title = {Cross-Platform Desktop Applications: Using Node, Electron, and NW.js},
    date = {May 2017},
    isbn = {9781617292842},
}

@book{electron-in-action,
    author = {Steve Kinney},
    title = {Electron in Action},
    date = {2018},
    isbn = {9781638356042},
}

@thesis{electron-javafx,
    author = {A. Alkhars and W. Mahmoud},
    title = {Cross-Platform Desktop Development (JavaFx vs. Electron)},
    type = {Thesis},
    institution = {Linnaeus University, Faculty of Technology, Department of Computer Science.},
    date = {2017},
}

